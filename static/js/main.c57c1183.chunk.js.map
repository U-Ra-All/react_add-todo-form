{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","email","name","className","href","TodoInfo","todo","title","completed","id","TodoList","todos","map","username","userId","usersFromServer","find","App","useState","todoList","setTodoList","userName","isTitleValid","isUserNameValid","newTodo","setNewTodo","handleChange","e","target","value","includes","slice","toLowerCase","action","method","onSubmit","preventDefault","htmlFor","type","placeholder","onChange","disabled","onClick","lastTodoId","Math","max","todoUser","todoToAdd","prevTodos","push","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c57c1183.chunk.js","sourcesContent":["import { User } from '../../types/User';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { email, name } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const { title, completed, user } = todo;\n\n  return (\n    <article\n      data-id={todo.id}\n      className={`TodoInfo ${completed && 'TodoInfo--completed'} `}\n    >\n      <h2 className=\"TodoInfo__title\">{title}</h2>\n\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map((todo) => (\n        <TodoInfo key={todo.id} todo={todo} />\n      ))}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { useState } from 'react';\nimport './App.scss';\n\nimport { TodoList } from './components/TodoList';\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nfunction getUser(userId: number): User | null {\n  return usersFromServer.find((user) => user.id === userId) || null;\n}\n\nexport const todos: Todo[] = todosFromServer.map((todo) => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nexport const App: React.FC = () => {\n  const [todoList, setTodoList] = useState(todos);\n\n  const [newTodo, setNewTodo] = useState({\n    title: '',\n    userName: '',\n    isTitleValid: true,\n    isUserNameValid: true,\n  });\n\n  const handleChange = (\n    e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>,\n  ) => {\n    const allowedChars\n    = '0123456789abcdefghigklmnopqrstuvwxyz абвгдеёжзийклмнопрстуфхцчшщъыьэюя';\n    const { name, value } = e.target;\n\n    if (\n      name === 'title'\n      && allowedChars.includes(value.slice(-1).toLowerCase())\n    ) {\n      setNewTodo((todo) => ({\n        ...todo,\n        [name]: value,\n        isTitleValid: true,\n      }));\n    }\n\n    if (name === 'userName') {\n      setNewTodo((todo) => ({\n        ...todo,\n        [name]: value,\n        isUserNameValid: true,\n      }));\n    }\n  };\n\n  const handleAddTodo = () => {\n    if (!newTodo.title && !newTodo.userName) {\n      setNewTodo((todo) => ({\n        ...todo,\n        isTitleValid: false,\n        isUserNameValid: false,\n      }));\n\n      return;\n    }\n\n    if (!newTodo.title) {\n      setNewTodo((todo) => ({\n        ...todo,\n        isTitleValid: false,\n      }));\n\n      return;\n    }\n\n    if (!newTodo.userName) {\n      setNewTodo((todo) => ({\n        ...todo,\n        isUserNameValid: false,\n      }));\n\n      return;\n    }\n\n    const lastTodoId = Math.max(...todoList.map((todo) => todo.id));\n\n    const todoUser: User | undefined = usersFromServer.find(\n      (user) => user.name === newTodo.userName,\n    );\n\n    const todoToAdd: Todo = {\n      id: lastTodoId + 1,\n      title: newTodo.title,\n      userId: todoUser?.id,\n      completed: false,\n      user: todoUser,\n    };\n\n    setTodoList((prevTodos) => {\n      prevTodos.push(todoToAdd);\n\n      return [...prevTodos];\n    });\n\n    setNewTodo({\n      title: '',\n      userName: '',\n      isTitleValid: true,\n      isUserNameValid: true,\n    });\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={(e) => {\n          e.preventDefault();\n        }}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"todoTitle\">Title: </label>\n          <input\n            id=\"todoTitle\"\n            type=\"text\"\n            placeholder=\"Enter a title\"\n            data-cy=\"titleInput\"\n            name=\"title\"\n            value={newTodo.title}\n            onChange={handleChange}\n          />\n          {!newTodo.isTitleValid && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"todoUser\">User: </label>\n          <select\n            id=\"todoUser\"\n            data-cy=\"userSelect\"\n            name=\"userName\"\n            value={newTodo.userName}\n            onChange={handleChange}\n          >\n            <option value=\"\" disabled>\n              Choose a user\n            </option>\n            {usersFromServer.map((user) => (\n              <option key={user.id} value={user.name}>\n                {user.name}\n              </option>\n            ))}\n          </select>\n\n          {!newTodo.isUserNameValid && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\" onClick={handleAddTodo}>\n          Add\n        </button>\n      </form>\n\n      {todos.length && <TodoList todos={todoList} />}\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}